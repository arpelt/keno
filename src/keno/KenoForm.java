/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package keno;

import java.awt.Color;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.text.BadLocationException;
import javax.swing.table.DefaultTableCellRenderer;

/**
 * A GUI components and functionality.
 *
 * @author AP
 */
public class KenoForm extends javax.swing.JFrame {

    /**
     * Creates new form KenoFrame
     */
    public KenoForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b7 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b10 = new javax.swing.JButton();
        b11 = new javax.swing.JButton();
        b12 = new javax.swing.JButton();
        b13 = new javax.swing.JButton();
        b14 = new javax.swing.JButton();
        b15 = new javax.swing.JButton();
        b16 = new javax.swing.JButton();
        b17 = new javax.swing.JButton();
        b18 = new javax.swing.JButton();
        b19 = new javax.swing.JButton();
        b20 = new javax.swing.JButton();
        b21 = new javax.swing.JButton();
        b22 = new javax.swing.JButton();
        b23 = new javax.swing.JButton();
        b24 = new javax.swing.JButton();
        b25 = new javax.swing.JButton();
        b26 = new javax.swing.JButton();
        b27 = new javax.swing.JButton();
        b28 = new javax.swing.JButton();
        b29 = new javax.swing.JButton();
        b30 = new javax.swing.JButton();
        b31 = new javax.swing.JButton();
        b32 = new javax.swing.JButton();
        b33 = new javax.swing.JButton();
        b34 = new javax.swing.JButton();
        b35 = new javax.swing.JButton();
        b36 = new javax.swing.JButton();
        b37 = new javax.swing.JButton();
        b38 = new javax.swing.JButton();
        b39 = new javax.swing.JButton();
        b40 = new javax.swing.JButton();
        b41 = new javax.swing.JButton();
        b42 = new javax.swing.JButton();
        b43 = new javax.swing.JButton();
        b44 = new javax.swing.JButton();
        b45 = new javax.swing.JButton();
        b46 = new javax.swing.JButton();
        b47 = new javax.swing.JButton();
        b48 = new javax.swing.JButton();
        b49 = new javax.swing.JButton();
        b50 = new javax.swing.JButton();
        b51 = new javax.swing.JButton();
        b52 = new javax.swing.JButton();
        b53 = new javax.swing.JButton();
        b54 = new javax.swing.JButton();
        b55 = new javax.swing.JButton();
        b56 = new javax.swing.JButton();
        b57 = new javax.swing.JButton();
        b58 = new javax.swing.JButton();
        b59 = new javax.swing.JButton();
        b60 = new javax.swing.JButton();
        b61 = new javax.swing.JButton();
        b62 = new javax.swing.JButton();
        b63 = new javax.swing.JButton();
        b64 = new javax.swing.JButton();
        b65 = new javax.swing.JButton();
        b66 = new javax.swing.JButton();
        b67 = new javax.swing.JButton();
        b68 = new javax.swing.JButton();
        b69 = new javax.swing.JButton();
        b70 = new javax.swing.JButton();
        check = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableOneToSeventyNumbers = new javax.swing.JTable();
        statusBar = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Keno");
        setResizable(false);

        jLabel1.setText("Level");

        b1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b1.setFocusable(false);
        b1.setLabel("1");
        b1.setPreferredSize(new java.awt.Dimension(50, 26));
        b1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b1MouseClicked(evt);
            }
        });

        b2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b2.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b2.setFocusable(false);
        b2.setLabel("2");
        b2.setPreferredSize(new java.awt.Dimension(50, 26));
        b2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b2MouseClicked(evt);
            }
        });

        b3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b3.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b3.setFocusable(false);
        b3.setLabel("3");
        b3.setPreferredSize(new java.awt.Dimension(50, 26));
        b3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b3MouseClicked(evt);
            }
        });

        b4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b4.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b4.setFocusable(false);
        b4.setLabel("4");
        b4.setPreferredSize(new java.awt.Dimension(50, 26));
        b4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b4MouseClicked(evt);
            }
        });

        b5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b5.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b5.setFocusable(false);
        b5.setLabel("5");
        b5.setPreferredSize(new java.awt.Dimension(50, 26));
        b5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b5MouseClicked(evt);
            }
        });

        b6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b6.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b6.setFocusable(false);
        b6.setLabel("6");
        b6.setPreferredSize(new java.awt.Dimension(50, 26));
        b6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b6MouseClicked(evt);
            }
        });

        b7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b7.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b7.setFocusable(false);
        b7.setLabel("7");
        b7.setPreferredSize(new java.awt.Dimension(50, 26));
        b7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b7MouseClicked(evt);
            }
        });

        b8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b8.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b8.setFocusable(false);
        b8.setLabel("8");
        b8.setPreferredSize(new java.awt.Dimension(50, 26));
        b8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b8MouseClicked(evt);
            }
        });

        b9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b9.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b9.setFocusable(false);
        b9.setLabel("9");
        b9.setPreferredSize(new java.awt.Dimension(50, 26));
        b9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b9MouseClicked(evt);
            }
        });

        b10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b10.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b10.setFocusable(false);
        b10.setLabel("10");
        b10.setPreferredSize(new java.awt.Dimension(50, 26));
        b10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b10MouseClicked(evt);
            }
        });

        b11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b11.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b11.setFocusable(false);
        b11.setLabel("11");
        b11.setPreferredSize(new java.awt.Dimension(50, 26));
        b11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b11MouseClicked(evt);
            }
        });

        b12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b12.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b12.setFocusable(false);
        b12.setLabel("12");
        b12.setPreferredSize(new java.awt.Dimension(50, 26));
        b12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b12MouseClicked(evt);
            }
        });

        b13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b13.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b13.setFocusable(false);
        b13.setLabel("13");
        b13.setPreferredSize(new java.awt.Dimension(50, 26));
        b13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b13MouseClicked(evt);
            }
        });

        b14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b14.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b14.setFocusable(false);
        b14.setLabel("14");
        b14.setPreferredSize(new java.awt.Dimension(50, 26));
        b14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b14MouseClicked(evt);
            }
        });

        b15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b15.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b15.setFocusable(false);
        b15.setLabel("15");
        b15.setPreferredSize(new java.awt.Dimension(50, 26));
        b15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b15MouseClicked(evt);
            }
        });

        b16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b16.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b16.setFocusable(false);
        b16.setLabel("16");
        b16.setPreferredSize(new java.awt.Dimension(50, 26));
        b16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b16MouseClicked(evt);
            }
        });

        b17.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b17.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b17.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b17.setFocusable(false);
        b17.setLabel("17");
        b17.setPreferredSize(new java.awt.Dimension(50, 26));
        b17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b17MouseClicked(evt);
            }
        });

        b18.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b18.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b18.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b18.setFocusable(false);
        b18.setLabel("18");
        b18.setPreferredSize(new java.awt.Dimension(50, 26));
        b18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b18MouseClicked(evt);
            }
        });

        b19.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b19.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b19.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b19.setFocusable(false);
        b19.setLabel("19");
        b19.setPreferredSize(new java.awt.Dimension(50, 26));
        b19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b19MouseClicked(evt);
            }
        });

        b20.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b20.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b20.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b20.setFocusable(false);
        b20.setLabel("20");
        b20.setPreferredSize(new java.awt.Dimension(50, 26));
        b20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b20MouseClicked(evt);
            }
        });

        b21.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b21.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b21.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b21.setFocusable(false);
        b21.setLabel("21");
        b21.setPreferredSize(new java.awt.Dimension(50, 26));
        b21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b21MouseClicked(evt);
            }
        });

        b22.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b22.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b22.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b22.setFocusable(false);
        b22.setLabel("22");
        b22.setPreferredSize(new java.awt.Dimension(50, 26));
        b22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b22MouseClicked(evt);
            }
        });

        b23.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b23.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b23.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b23.setFocusable(false);
        b23.setLabel("23");
        b23.setPreferredSize(new java.awt.Dimension(50, 26));
        b23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b23MouseClicked(evt);
            }
        });

        b24.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b24.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b24.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b24.setFocusable(false);
        b24.setLabel("24");
        b24.setPreferredSize(new java.awt.Dimension(50, 26));
        b24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b24MouseClicked(evt);
            }
        });

        b25.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b25.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b25.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b25.setFocusable(false);
        b25.setLabel("25");
        b25.setPreferredSize(new java.awt.Dimension(50, 26));
        b25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b25MouseClicked(evt);
            }
        });

        b26.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b26.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b26.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b26.setFocusable(false);
        b26.setLabel("26");
        b26.setPreferredSize(new java.awt.Dimension(50, 26));
        b26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b26MouseClicked(evt);
            }
        });

        b27.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b27.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b27.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b27.setFocusable(false);
        b27.setLabel("27");
        b27.setPreferredSize(new java.awt.Dimension(50, 26));
        b27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b27MouseClicked(evt);
            }
        });

        b28.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b28.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b28.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b28.setFocusable(false);
        b28.setLabel("28");
        b28.setPreferredSize(new java.awt.Dimension(50, 26));
        b28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b28MouseClicked(evt);
            }
        });

        b29.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b29.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b29.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b29.setFocusable(false);
        b29.setLabel("29");
        b29.setPreferredSize(new java.awt.Dimension(50, 26));
        b29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b29MouseClicked(evt);
            }
        });

        b30.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b30.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b30.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b30.setFocusable(false);
        b30.setLabel("30");
        b30.setPreferredSize(new java.awt.Dimension(50, 26));
        b30.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b30MouseClicked(evt);
            }
        });

        b31.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b31.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b31.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b31.setFocusable(false);
        b31.setLabel("31");
        b31.setPreferredSize(new java.awt.Dimension(50, 26));
        b31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b31MouseClicked(evt);
            }
        });

        b32.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b32.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b32.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b32.setFocusable(false);
        b32.setLabel("32");
        b32.setPreferredSize(new java.awt.Dimension(50, 26));
        b32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b32MouseClicked(evt);
            }
        });

        b33.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b33.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b33.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b33.setFocusable(false);
        b33.setLabel("33");
        b33.setPreferredSize(new java.awt.Dimension(50, 26));
        b33.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b33MouseClicked(evt);
            }
        });

        b34.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b34.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b34.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b34.setFocusable(false);
        b34.setLabel("34");
        b34.setPreferredSize(new java.awt.Dimension(50, 26));
        b34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b34MouseClicked(evt);
            }
        });

        b35.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b35.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b35.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b35.setFocusable(false);
        b35.setLabel("35");
        b35.setPreferredSize(new java.awt.Dimension(50, 26));
        b35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b35MouseClicked(evt);
            }
        });

        b36.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b36.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b36.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b36.setFocusable(false);
        b36.setLabel("36");
        b36.setPreferredSize(new java.awt.Dimension(50, 26));
        b36.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b36MouseClicked(evt);
            }
        });

        b37.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b37.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b37.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b37.setFocusable(false);
        b37.setLabel("37");
        b37.setPreferredSize(new java.awt.Dimension(50, 26));
        b37.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b37MouseClicked(evt);
            }
        });

        b38.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b38.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b38.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b38.setFocusable(false);
        b38.setLabel("38");
        b38.setPreferredSize(new java.awt.Dimension(50, 26));
        b38.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b38MouseClicked(evt);
            }
        });

        b39.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b39.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b39.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b39.setFocusable(false);
        b39.setLabel("39");
        b39.setPreferredSize(new java.awt.Dimension(50, 26));
        b39.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b39MouseClicked(evt);
            }
        });

        b40.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b40.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b40.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b40.setFocusable(false);
        b40.setLabel("40");
        b40.setPreferredSize(new java.awt.Dimension(50, 26));
        b40.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b40MouseClicked(evt);
            }
        });

        b41.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b41.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b41.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b41.setFocusable(false);
        b41.setLabel("41");
        b41.setPreferredSize(new java.awt.Dimension(50, 26));
        b41.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b41MouseClicked(evt);
            }
        });

        b42.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b42.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b42.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b42.setFocusable(false);
        b42.setLabel("42");
        b42.setPreferredSize(new java.awt.Dimension(50, 26));
        b42.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b42MouseClicked(evt);
            }
        });

        b43.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b43.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b43.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b43.setFocusable(false);
        b43.setLabel("43");
        b43.setPreferredSize(new java.awt.Dimension(50, 26));
        b43.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b43MouseClicked(evt);
            }
        });

        b44.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b44.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b44.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b44.setFocusable(false);
        b44.setLabel("44");
        b44.setPreferredSize(new java.awt.Dimension(50, 26));
        b44.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b44MouseClicked(evt);
            }
        });

        b45.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b45.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b45.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b45.setFocusable(false);
        b45.setLabel("45");
        b45.setPreferredSize(new java.awt.Dimension(50, 26));
        b45.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b45MouseClicked(evt);
            }
        });

        b46.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b46.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b46.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b46.setFocusable(false);
        b46.setLabel("46");
        b46.setPreferredSize(new java.awt.Dimension(50, 26));
        b46.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b46MouseClicked(evt);
            }
        });

        b47.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b47.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b47.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b47.setFocusable(false);
        b47.setLabel("47");
        b47.setPreferredSize(new java.awt.Dimension(50, 26));
        b47.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b47MouseClicked(evt);
            }
        });

        b48.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b48.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b48.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b48.setFocusable(false);
        b48.setLabel("48");
        b48.setPreferredSize(new java.awt.Dimension(50, 26));
        b48.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b48MouseClicked(evt);
            }
        });

        b49.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b49.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b49.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b49.setFocusable(false);
        b49.setLabel("49");
        b49.setPreferredSize(new java.awt.Dimension(50, 26));
        b49.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b49MouseClicked(evt);
            }
        });

        b50.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b50.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b50.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b50.setFocusable(false);
        b50.setLabel("50");
        b50.setPreferredSize(new java.awt.Dimension(50, 26));
        b50.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b50MouseClicked(evt);
            }
        });

        b51.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b51.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b51.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b51.setFocusable(false);
        b51.setLabel("51");
        b51.setPreferredSize(new java.awt.Dimension(50, 26));
        b51.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b51MouseClicked(evt);
            }
        });

        b52.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b52.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b52.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b52.setFocusable(false);
        b52.setLabel("52");
        b52.setPreferredSize(new java.awt.Dimension(50, 26));
        b52.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b52MouseClicked(evt);
            }
        });

        b53.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b53.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b53.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b53.setFocusable(false);
        b53.setLabel("53");
        b53.setPreferredSize(new java.awt.Dimension(50, 26));
        b53.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b53MouseClicked(evt);
            }
        });

        b54.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b54.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b54.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b54.setFocusable(false);
        b54.setLabel("54");
        b54.setPreferredSize(new java.awt.Dimension(50, 26));
        b54.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b54MouseClicked(evt);
            }
        });

        b55.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b55.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b55.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b55.setFocusable(false);
        b55.setLabel("55");
        b55.setPreferredSize(new java.awt.Dimension(50, 26));
        b55.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b55MouseClicked(evt);
            }
        });

        b56.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b56.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b56.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b56.setFocusable(false);
        b56.setLabel("56");
        b56.setPreferredSize(new java.awt.Dimension(50, 26));
        b56.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b56MouseClicked(evt);
            }
        });

        b57.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b57.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b57.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b57.setFocusable(false);
        b57.setLabel("57");
        b57.setPreferredSize(new java.awt.Dimension(50, 26));
        b57.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b57MouseClicked(evt);
            }
        });

        b58.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b58.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b58.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b58.setFocusable(false);
        b58.setLabel("58");
        b58.setPreferredSize(new java.awt.Dimension(50, 26));
        b58.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b58MouseClicked(evt);
            }
        });

        b59.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b59.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b59.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b59.setFocusable(false);
        b59.setLabel("59");
        b59.setPreferredSize(new java.awt.Dimension(50, 26));
        b59.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b59MouseClicked(evt);
            }
        });

        b60.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b60.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b60.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b60.setFocusable(false);
        b60.setLabel("60");
        b60.setPreferredSize(new java.awt.Dimension(50, 26));
        b60.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b60MouseClicked(evt);
            }
        });

        b61.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b61.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b61.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b61.setFocusable(false);
        b61.setLabel("61");
        b61.setPreferredSize(new java.awt.Dimension(50, 26));
        b61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b61MouseClicked(evt);
            }
        });

        b62.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b62.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b62.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b62.setFocusable(false);
        b62.setLabel("62");
        b62.setPreferredSize(new java.awt.Dimension(50, 26));
        b62.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b62MouseClicked(evt);
            }
        });

        b63.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b63.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b63.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b63.setFocusable(false);
        b63.setLabel("63");
        b63.setPreferredSize(new java.awt.Dimension(50, 26));
        b63.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b63MouseClicked(evt);
            }
        });

        b64.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b64.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b64.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b64.setFocusable(false);
        b64.setLabel("64");
        b64.setPreferredSize(new java.awt.Dimension(50, 26));
        b64.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b64MouseClicked(evt);
            }
        });

        b65.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b65.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b65.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b65.setFocusable(false);
        b65.setLabel("65");
        b65.setPreferredSize(new java.awt.Dimension(50, 26));
        b65.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b65MouseClicked(evt);
            }
        });

        b66.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b66.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b66.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b66.setFocusable(false);
        b66.setLabel("66");
        b66.setPreferredSize(new java.awt.Dimension(50, 26));
        b66.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b66MouseClicked(evt);
            }
        });

        b67.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b67.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b67.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b67.setFocusable(false);
        b67.setLabel("67");
        b67.setPreferredSize(new java.awt.Dimension(50, 26));
        b67.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b67MouseClicked(evt);
            }
        });

        b68.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b68.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b68.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b68.setFocusable(false);
        b68.setLabel("68");
        b68.setPreferredSize(new java.awt.Dimension(50, 26));
        b68.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b68MouseClicked(evt);
            }
        });

        b69.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b69.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b69.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b69.setFocusable(false);
        b69.setLabel("69");
        b69.setPreferredSize(new java.awt.Dimension(50, 26));
        b69.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b69MouseClicked(evt);
            }
        });

        b70.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        b70.setText("70");
        b70.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        b70.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        b70.setFocusable(false);
        b70.setPreferredSize(new java.awt.Dimension(50, 26));
        b70.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b70MouseClicked(evt);
            }
        });

        check.setText("Results");
        check.setFocusable(false);
        check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                readButtonClicked(evt);
            }
        });

        clear.setText("Clear");
        clear.setToolTipText("Clear board");
        clear.setFocusable(false);
        clear.setMaximumSize(new java.awt.Dimension(73, 25));
        clear.setMinimumSize(new java.awt.Dimension(73, 25));
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonClicked(evt);
            }
        });

        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(10);
        jSlider1.setMinimum(2);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setToolTipText("Select level");
        jSlider1.setValue(2);
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider1.setName(""); // NOI18N
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider1ValueChanged(evt);
            }
        });

        jButton1.setText("Random Numbers");
        jButton1.setFocusable(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                randomButtonClicked(evt);
            }
        });

        jButton3.setText("Numbers 1 to 70");
        jButton3.setFocusable(false);
        jButton3.setMaximumSize(new java.awt.Dimension(135, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(135, 25));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                allNumbersOneToSeventy(evt);
            }
        });

        jTextPane2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(jTextPane2);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Basic Data");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jCheckBox2.setText("Detailed Data");
        jCheckBox2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox2StateChanged(evt);
            }
        });

        jTableOneToSeventyNumbers.setAutoCreateRowSorter(true);
        jTableOneToSeventyNumbers.setModel(new javax.swing.table.DefaultTableModel(

            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Number", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( SwingConstants.CENTER );
        jTableOneToSeventyNumbers.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        jTableOneToSeventyNumbers.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        //jTableOneToSeventyNumbers.getTableHeader().setDefaultRenderer(centerRenderer);
        jTableOneToSeventyNumbers.setAutoCreateRowSorter(true);
        jTableOneToSeventyNumbers.setColumnSelectionAllowed(true);
        jTableOneToSeventyNumbers.setName(""); // NOI18N
        jTableOneToSeventyNumbers.getTableHeader().setResizingAllowed(false);
        jScrollPane3.setViewportView(jTableOneToSeventyNumbers);
        jTableOneToSeventyNumbers.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        statusBar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        statusBar.setForeground(new java.awt.Color(204, 51, 0));
        statusBar.setText(" ");
        statusBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jTableHotColdNumbers.setAutoCreateRowSorter(true);
        jTableHotColdNumbers.setModel(new javax.swing.table.DefaultTableModel(

            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Number", "Hot/Cold"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableHotColdNumbers.setColumnSelectionAllowed(true);
        jTableHotColdNumbers.getTableHeader().setResizingAllowed(false);
        jScrollPane4.setViewportView(jTableHotColdNumbers);
        jTableHotColdNumbers.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTableHotColdNumbers.getAccessibleContext().setAccessibleName("");
        jTableHotColdNumbers.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        jTableHotColdNumbers.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
        //jTable1.getTableHeader().setDefaultRenderer(centerRenderer);
        jTableHotColdNumbers.setAutoCreateRowSorter(true);
        jTableHotColdNumbers.setColumnSelectionAllowed(true);

        jButton2.setText("Hot and Cold Numbers");
        jButton2.setAlignmentX(0.5F);
        jButton2.setFocusable(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hotAndColdNumbers(evt);
            }
        });

        jButton4.setText("Update");
        jButton4.setFocusable(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateDraws(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton4MousePressed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b21, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b31, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b41, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b51, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(b61, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b42, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b43, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b44, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b45, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b46, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b47, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b48, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b49, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b50, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b15, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b16, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b19, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b20, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b32, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b33, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b34, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b35, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b36, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b37, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b38, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b39, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b40, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b22, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b23, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b24, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b27, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b28, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b29, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b30, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b52, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b53, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b54, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b55, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b56, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b57, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b58, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b59, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b60, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(b62, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b63, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(b64, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b65, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b66, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b67, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(b68, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b69, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(b70, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 929, Short.MAX_VALUE)
                    .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addGap(21, 21, 21))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {b1, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b2, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b3, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b4, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49, b5, b50, b51, b52, b53, b54, b55, b56, b57, b58, b59, b6, b60, b61, b62, b63, b64, b65, b66, b67, b68, b69, b7, b70, b8, b9});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b32, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b33, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b60, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(b61, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b64, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b65, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b67, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b69, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(b70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(check)
                        .addComponent(jButton1))
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(statusBar)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b1MouseClicked
        if ((!b1clicked) && selectedNbrs.size() < kenoLevel) {
            b1.setBackground(Color.orange);
            b1clicked = true;
            selectedNbrs.add("1");
        } else if ((b1clicked)) {
            b1.setBackground(null);
            b1clicked = false;
            selectedNbrs.remove("1");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b1MouseClicked

    private void b2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b2MouseClicked
        if ((!b2clicked) && selectedNbrs.size() < kenoLevel) {
            b2.setBackground(Color.orange);
            b2clicked = true;
            selectedNbrs.add("2");
        } else if ((b2clicked)) {
            b2.setBackground(null);
            b2clicked = false;
            selectedNbrs.remove("2");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b2MouseClicked

    private void b3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b3MouseClicked
        if ((!b3clicked) && selectedNbrs.size() < kenoLevel) {
            b3.setBackground(Color.orange);
            b3clicked = true;
            selectedNbrs.add("3");
        } else if ((b3clicked)) {
            b3.setBackground(null);
            b3clicked = false;
            selectedNbrs.remove("3");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b3MouseClicked

    private void b4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b4MouseClicked
        if ((!b4clicked) && selectedNbrs.size() < kenoLevel) {
            b4.setBackground(Color.orange);
            b4clicked = true;
            selectedNbrs.add("4");
        } else if ((b4clicked)) {
            b4.setBackground(null);
            b4clicked = false;
            selectedNbrs.remove("4");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b4MouseClicked

    private void b5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b5MouseClicked
        if ((!b5clicked) && selectedNbrs.size() < kenoLevel) {
            b5.setBackground(Color.orange);
            b5clicked = true;
            selectedNbrs.add("5");
        } else if ((b5clicked)) {
            b5.setBackground(null);
            b5clicked = false;
            selectedNbrs.remove("5");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b5MouseClicked

    private void b6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b6MouseClicked
        if ((!b6clicked) && selectedNbrs.size() < kenoLevel) {
            b6.setBackground(Color.orange);
            b6clicked = true;
            selectedNbrs.add("6");
        } else if ((b6clicked)) {
            b6.setBackground(null);
            b6clicked = false;
            selectedNbrs.remove("6");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b6MouseClicked

    private void b7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b7MouseClicked
        if ((!b7clicked) && selectedNbrs.size() < kenoLevel) {
            b7.setBackground(Color.orange);
            b7clicked = true;
            selectedNbrs.add("7");
        } else if ((b7clicked)) {
            b7.setBackground(null);
            b7clicked = false;
            selectedNbrs.remove("7");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b7MouseClicked

    private void b8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b8MouseClicked
        if ((!b8clicked) && selectedNbrs.size() < kenoLevel) {
            b8.setBackground(Color.orange);
            b8clicked = true;
            selectedNbrs.add("8");
        } else if ((b8clicked)) {
            b8.setBackground(null);
            b8clicked = false;
            selectedNbrs.remove("8");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b8MouseClicked

    private void b9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b9MouseClicked
        if ((!b9clicked) && selectedNbrs.size() < kenoLevel) {
            b9.setBackground(Color.orange);
            b9clicked = true;
            selectedNbrs.add("9");
        } else if ((b9clicked)) {
            b9.setBackground(null);
            b9clicked = false;
            selectedNbrs.remove("9");
        }
        selectedNumbersAmountEqualsKenoLevel();

    }//GEN-LAST:event_b9MouseClicked

    private void b10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b10MouseClicked
        if ((!b10clicked) && selectedNbrs.size() < kenoLevel) {
            b10.setBackground(Color.orange);
            b10clicked = true;
            selectedNbrs.add("10");
        } else if ((b10clicked)) {
            b10.setBackground(null);
            b10clicked = false;
            selectedNbrs.remove("10");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b10MouseClicked

    private void b11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b11MouseClicked
        if ((!b11clicked) && selectedNbrs.size() < kenoLevel) {
            b11.setBackground(Color.orange);
            b11clicked = true;
            selectedNbrs.add("11");
        } else if ((b11clicked)) {
            b11.setBackground(null);
            b11clicked = false;
            selectedNbrs.remove("11");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b11MouseClicked

    private void b12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b12MouseClicked
        if ((!b12clicked) && selectedNbrs.size() < kenoLevel) {
            b12.setBackground(Color.orange);
            b12clicked = true;
            selectedNbrs.add("12");
        } else if ((b12clicked)) {
            b12.setBackground(null);
            b12clicked = false;
            selectedNbrs.remove("12");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b12MouseClicked

    private void b13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b13MouseClicked
        if ((!b13clicked) && selectedNbrs.size() < kenoLevel) {
            b13.setBackground(Color.orange);
            b13clicked = true;
            selectedNbrs.add("13");
        } else if ((b13clicked)) {
            b13.setBackground(null);
            b13clicked = false;
            selectedNbrs.remove("13");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b13MouseClicked

    private void b14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b14MouseClicked
        if ((!b14clicked) && selectedNbrs.size() < kenoLevel) {
            b14.setBackground(Color.orange);
            b14clicked = true;
            selectedNbrs.add("14");
        } else if ((b14clicked)) {
            b14.setBackground(null);
            b14clicked = false;
            selectedNbrs.remove("14");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b14MouseClicked

    private void b15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b15MouseClicked
        if ((!b15clicked) && selectedNbrs.size() < kenoLevel) {
            b15.setBackground(Color.orange);
            b15clicked = true;
            selectedNbrs.add("15");
        } else if ((b15clicked)) {
            b15.setBackground(null);
            b15clicked = false;
            selectedNbrs.remove("15");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b15MouseClicked

    private void b16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b16MouseClicked
        if ((!b16clicked) && selectedNbrs.size() < kenoLevel) {
            b16.setBackground(Color.orange);
            b16clicked = true;
            selectedNbrs.add("16");
        } else if ((b16clicked)) {
            b16.setBackground(null);
            b16clicked = false;
            selectedNbrs.remove("16");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b16MouseClicked

    private void b17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b17MouseClicked
        if ((!b17clicked) && selectedNbrs.size() < kenoLevel) {
            b17.setBackground(Color.orange);
            b17clicked = true;
            selectedNbrs.add("17");
        } else if ((b17clicked)) {
            b17.setBackground(null);
            b17clicked = false;
            selectedNbrs.remove("17");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b17MouseClicked

    private void b18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b18MouseClicked
        if ((!b18clicked) && selectedNbrs.size() < kenoLevel) {
            b18.setBackground(Color.orange);
            b18clicked = true;
            selectedNbrs.add("18");
        } else if ((b18clicked)) {
            b18.setBackground(null);
            b18clicked = false;
            selectedNbrs.remove("18");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b18MouseClicked

    private void b19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b19MouseClicked
        if ((!b19clicked) && selectedNbrs.size() < kenoLevel) {
            b19.setBackground(Color.orange);
            b19clicked = true;
            selectedNbrs.add("19");
        } else if ((b19clicked)) {
            b19.setBackground(null);
            b19clicked = false;
            selectedNbrs.remove("19");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b19MouseClicked

    private void b20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b20MouseClicked
        if ((!b20clicked) && selectedNbrs.size() < kenoLevel) {
            b20.setBackground(Color.orange);
            b20clicked = true;
            selectedNbrs.add("20");
        } else if ((b20clicked)) {
            b20.setBackground(null);
            b20clicked = false;
            selectedNbrs.remove("20");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b20MouseClicked

    private void b21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b21MouseClicked
        if ((!b21clicked) && selectedNbrs.size() < kenoLevel) {
            b21.setBackground(Color.orange);
            b21clicked = true;
            selectedNbrs.add("21");
        } else if ((b21clicked)) {
            b21.setBackground(null);
            b21clicked = false;
            selectedNbrs.remove("21");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b21MouseClicked

    private void b22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b22MouseClicked
        if ((!b22clicked) && selectedNbrs.size() < kenoLevel) {
            b22.setBackground(Color.orange);
            b22clicked = true;
            selectedNbrs.add("22");
        } else if ((b22clicked)) {
            b22.setBackground(null);
            b22clicked = false;
            selectedNbrs.remove("22");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b22MouseClicked

    private void b23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b23MouseClicked
        if ((!b23clicked) && selectedNbrs.size() < kenoLevel) {
            b23.setBackground(Color.orange);
            b23clicked = true;
            selectedNbrs.add("23");
        } else if ((b23clicked)) {
            b23.setBackground(null);
            b23clicked = false;
            selectedNbrs.remove("23");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b23MouseClicked

    private void b24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b24MouseClicked
        if ((!b24clicked) && selectedNbrs.size() < kenoLevel) {
            b24.setBackground(Color.orange);
            b24clicked = true;
            selectedNbrs.add("24");
        } else if ((b24clicked)) {
            b24.setBackground(null);
            b24clicked = false;
            selectedNbrs.remove("24");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b24MouseClicked

    private void b25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b25MouseClicked
        if ((!b25clicked) && selectedNbrs.size() < kenoLevel) {
            b25.setBackground(Color.orange);
            b25clicked = true;
            selectedNbrs.add("25");
        } else if ((b25clicked)) {
            b25.setBackground(null);
            b25clicked = false;
            selectedNbrs.remove("25");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b25MouseClicked

    private void b26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b26MouseClicked
        if ((!b26clicked) && selectedNbrs.size() < kenoLevel) {
            b26.setBackground(Color.orange);
            b26clicked = true;
            selectedNbrs.add("26");
        } else if ((b26clicked)) {
            b26.setBackground(null);
            b26clicked = false;
            selectedNbrs.remove("26");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b26MouseClicked

    private void b27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b27MouseClicked
        if ((!b27clicked) && selectedNbrs.size() < kenoLevel) {
            b27.setBackground(Color.orange);
            b27clicked = true;
            selectedNbrs.add("27");
        } else if ((b27clicked)) {
            b27.setBackground(null);
            b27clicked = false;
            selectedNbrs.remove("27");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b27MouseClicked

    private void b28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b28MouseClicked
        if ((!b28clicked) && selectedNbrs.size() < kenoLevel) {
            b28.setBackground(Color.orange);
            b28clicked = true;
            selectedNbrs.add("28");
        } else if ((b28clicked)) {
            b28.setBackground(null);
            b28clicked = false;
            selectedNbrs.remove("28");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b28MouseClicked

    private void b29MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b29MouseClicked
        if ((!b29clicked) && selectedNbrs.size() < kenoLevel) {
            b29.setBackground(Color.orange);
            b29clicked = true;
            selectedNbrs.add("29");
        } else if ((b29clicked)) {
            b29.setBackground(null);
            b29clicked = false;
            selectedNbrs.remove("29");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b29MouseClicked

    private void b30MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b30MouseClicked
        if ((!b30clicked) && selectedNbrs.size() < kenoLevel) {
            b30.setBackground(Color.orange);
            b30clicked = true;
            selectedNbrs.add("30");
        } else if ((b30clicked)) {
            b30.setBackground(null);
            b30clicked = false;
            selectedNbrs.remove("30");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b30MouseClicked

    private void b31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b31MouseClicked
        if ((!b31clicked) && selectedNbrs.size() < kenoLevel) {
            b31.setBackground(Color.orange);
            b31clicked = true;
            selectedNbrs.add("31");
        } else if ((b31clicked)) {
            b31.setBackground(null);
            b31clicked = false;
            selectedNbrs.remove("31");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b31MouseClicked

    private void b32MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b32MouseClicked
        if ((!b32clicked) && selectedNbrs.size() < kenoLevel) {
            b32.setBackground(Color.orange);
            b32clicked = true;
            selectedNbrs.add("32");
        } else if ((b32clicked)) {
            b32.setBackground(null);
            b32clicked = false;
            selectedNbrs.remove("32");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b32MouseClicked

    private void b33MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b33MouseClicked
        if ((!b33clicked) && selectedNbrs.size() < kenoLevel) {
            b33.setBackground(Color.orange);
            b33clicked = true;
            selectedNbrs.add("33");
        } else if ((b33clicked)) {
            b33.setBackground(null);
            b33clicked = false;
            selectedNbrs.remove("33");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b33MouseClicked

    private void b34MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b34MouseClicked
        if ((!b34clicked) && selectedNbrs.size() < kenoLevel) {
            b34.setBackground(Color.orange);
            b34clicked = true;
            selectedNbrs.add("34");
        } else if ((b34clicked)) {
            b34.setBackground(null);
            b34clicked = false;
            selectedNbrs.remove("34");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b34MouseClicked

    private void b35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b35MouseClicked
        if ((!b35clicked) && selectedNbrs.size() < kenoLevel) {
            b35.setBackground(Color.orange);
            b35clicked = true;
            selectedNbrs.add("35");
        } else if ((b35clicked)) {
            b35.setBackground(null);
            b35clicked = false;
            selectedNbrs.remove("35");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b35MouseClicked

    private void b36MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b36MouseClicked
        if ((!b36clicked) && selectedNbrs.size() < kenoLevel) {
            b36.setBackground(Color.orange);
            b36clicked = true;
            selectedNbrs.add("36");
        } else if ((b36clicked)) {
            b36.setBackground(null);
            b36clicked = false;
            selectedNbrs.remove("36");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b36MouseClicked

    private void b37MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b37MouseClicked
        if ((!b37clicked) && selectedNbrs.size() < kenoLevel) {
            b37.setBackground(Color.orange);
            b37clicked = true;
            selectedNbrs.add("37");
        } else if ((b37clicked)) {
            b37.setBackground(null);
            b37clicked = false;
            selectedNbrs.remove("37");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b37MouseClicked

    private void b38MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b38MouseClicked
        if ((!b38clicked) && selectedNbrs.size() < kenoLevel) {
            b38.setBackground(Color.orange);
            b38clicked = true;
            selectedNbrs.add("38");
        } else if ((b38clicked)) {
            b38.setBackground(null);
            b38clicked = false;
            selectedNbrs.remove("38");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b38MouseClicked

    private void b39MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b39MouseClicked
        if ((!b39clicked) && selectedNbrs.size() < kenoLevel) {
            b39.setBackground(Color.orange);
            b39clicked = true;
            selectedNbrs.add("39");
        } else if ((b39clicked)) {
            b39.setBackground(null);
            b39clicked = false;
            selectedNbrs.remove("39");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b39MouseClicked

    private void b40MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b40MouseClicked
        if ((!b40clicked) && selectedNbrs.size() < kenoLevel) {
            b40.setBackground(Color.orange);
            b40clicked = true;
            selectedNbrs.add("40");
        } else if ((b40clicked)) {
            b40.setBackground(null);
            b40clicked = false;
            selectedNbrs.remove("40");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b40MouseClicked

    private void b41MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b41MouseClicked
        if ((!b41clicked) && selectedNbrs.size() < kenoLevel) {
            b41.setBackground(Color.orange);
            b41clicked = true;
            selectedNbrs.add("41");
        } else if ((b41clicked)) {
            b41.setBackground(null);
            b41clicked = false;
            selectedNbrs.remove("41");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b41MouseClicked

    private void b42MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b42MouseClicked
        if ((!b42clicked) && selectedNbrs.size() < kenoLevel) {
            b42.setBackground(Color.orange);
            b42clicked = true;
            selectedNbrs.add("42");
        } else if ((b42clicked)) {
            b42.setBackground(null);
            b42clicked = false;
            selectedNbrs.remove("42");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b42MouseClicked

    private void b43MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b43MouseClicked
        if ((!b43clicked) && selectedNbrs.size() < kenoLevel) {
            b43.setBackground(Color.orange);
            b43clicked = true;
            selectedNbrs.add("43");
        } else if ((b43clicked)) {
            b43.setBackground(null);
            b43clicked = false;
            selectedNbrs.remove("43");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b43MouseClicked

    private void b44MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b44MouseClicked
        if ((!b44clicked) && selectedNbrs.size() < kenoLevel) {
            b44.setBackground(Color.orange);
            b44clicked = true;
            selectedNbrs.add("44");
        } else if ((b44clicked)) {
            b44.setBackground(null);
            b44clicked = false;
            selectedNbrs.remove("44");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b44MouseClicked

    private void b45MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b45MouseClicked
        if ((!b45clicked) && selectedNbrs.size() < kenoLevel) {
            b45.setBackground(Color.orange);
            b45clicked = true;
            selectedNbrs.add("45");
        } else if ((b45clicked)) {
            b45.setBackground(null);
            b45clicked = false;
            selectedNbrs.remove("45");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b45MouseClicked

    private void b46MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b46MouseClicked
        if ((!b46clicked) && selectedNbrs.size() < kenoLevel) {
            b46.setBackground(Color.orange);
            b46clicked = true;
            selectedNbrs.add("46");
        } else if ((b46clicked)) {
            b46.setBackground(null);
            b46clicked = false;
            selectedNbrs.remove("46");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b46MouseClicked

    private void b47MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b47MouseClicked
        if ((!b47clicked) && selectedNbrs.size() < kenoLevel) {
            b47.setBackground(Color.orange);
            b47clicked = true;
            selectedNbrs.add("47");
        } else if ((b47clicked)) {
            b47.setBackground(null);
            b47clicked = false;
            selectedNbrs.remove("47");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b47MouseClicked

    private void b48MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b48MouseClicked
        if ((!b48clicked) && selectedNbrs.size() < kenoLevel) {
            b48.setBackground(Color.orange);
            b48clicked = true;
            selectedNbrs.add("48");
        } else if ((b48clicked)) {
            b48.setBackground(null);
            b48clicked = false;
            selectedNbrs.remove("48");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b48MouseClicked

    private void b49MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b49MouseClicked
        if ((!b49clicked) && selectedNbrs.size() < kenoLevel) {
            b49.setBackground(Color.orange);
            b49clicked = true;
            selectedNbrs.add("49");
        } else if ((b49clicked)) {
            b49.setBackground(null);
            b49clicked = false;
            selectedNbrs.remove("49");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b49MouseClicked

    private void b50MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b50MouseClicked
        if ((!b50clicked) && selectedNbrs.size() < kenoLevel) {
            b50.setBackground(Color.orange);
            b50clicked = true;
            selectedNbrs.add("50");
        } else if ((b50clicked)) {
            b50.setBackground(null);
            b50clicked = false;
            selectedNbrs.remove("50");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b50MouseClicked

    private void b51MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b51MouseClicked
        if ((!b51clicked) && selectedNbrs.size() < kenoLevel) {
            b51.setBackground(Color.orange);
            b51clicked = true;
            selectedNbrs.add("51");
        } else if ((b51clicked)) {
            b51.setBackground(null);
            b51clicked = false;
            selectedNbrs.remove("51");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b51MouseClicked

    private void b52MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b52MouseClicked
        if ((!b52clicked) && selectedNbrs.size() < kenoLevel) {
            b52.setBackground(Color.orange);
            b52clicked = true;
            selectedNbrs.add("52");
        } else if ((b52clicked)) {
            b52.setBackground(null);
            b52clicked = false;
            selectedNbrs.remove("52");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b52MouseClicked

    private void b53MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b53MouseClicked
        if ((!b53clicked) && selectedNbrs.size() < kenoLevel) {
            b53.setBackground(Color.orange);
            b53clicked = true;
            selectedNbrs.add("53");
        } else if ((b53clicked)) {
            b53.setBackground(null);
            b53clicked = false;
            selectedNbrs.remove("53");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b53MouseClicked

    private void b54MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b54MouseClicked
        if ((!b54clicked) && selectedNbrs.size() < kenoLevel) {
            b54.setBackground(Color.orange);
            b54clicked = true;
            selectedNbrs.add("54");
        } else if ((b54clicked)) {
            b54.setBackground(null);
            b54clicked = false;
            selectedNbrs.remove("54");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b54MouseClicked

    private void b55MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b55MouseClicked
        if ((!b55clicked) && selectedNbrs.size() < kenoLevel) {
            b55.setBackground(Color.orange);
            b55clicked = true;
            selectedNbrs.add("55");
        } else if ((b55clicked)) {
            b55.setBackground(null);
            b55clicked = false;
            selectedNbrs.remove("55");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b55MouseClicked

    private void b56MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b56MouseClicked
        if ((!b56clicked) && selectedNbrs.size() < kenoLevel) {
            b56.setBackground(Color.orange);
            b56clicked = true;
            selectedNbrs.add("56");
        } else if ((b56clicked)) {
            b56.setBackground(null);
            b56clicked = false;
            selectedNbrs.remove("56");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b56MouseClicked

    private void b57MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b57MouseClicked
        if ((!b57clicked) && selectedNbrs.size() < kenoLevel) {
            b57.setBackground(Color.orange);
            b57clicked = true;
            selectedNbrs.add("57");
        } else if ((b57clicked)) {
            b57.setBackground(null);
            b57clicked = false;
            selectedNbrs.remove("57");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b57MouseClicked

    private void b58MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b58MouseClicked
        if ((!b58clicked) && selectedNbrs.size() < kenoLevel) {
            b58.setBackground(Color.orange);
            b58clicked = true;
            selectedNbrs.add("58");
        } else if ((b58clicked)) {
            b58.setBackground(null);
            b58clicked = false;
            selectedNbrs.remove("58");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b58MouseClicked

    private void b59MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b59MouseClicked
        if ((!b59clicked) && selectedNbrs.size() < kenoLevel) {
            b59.setBackground(Color.orange);
            b59clicked = true;
            selectedNbrs.add("59");
        } else if ((b59clicked)) {
            b59.setBackground(null);
            b59clicked = false;
            selectedNbrs.remove("59");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b59MouseClicked

    private void b60MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b60MouseClicked
        if ((!b60clicked) && selectedNbrs.size() < kenoLevel) {
            b60.setBackground(Color.orange);
            b60clicked = true;
            selectedNbrs.add("60");
        } else if ((b60clicked)) {
            b60.setBackground(null);
            b60clicked = false;
            selectedNbrs.remove("60");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b60MouseClicked

    private void b61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b61MouseClicked
        if ((!b61clicked) && selectedNbrs.size() < kenoLevel) {
            b61.setBackground(Color.orange);
            b61clicked = true;
            selectedNbrs.add("61");
        } else if ((b61clicked)) {
            b61.setBackground(null);
            b61clicked = false;
            selectedNbrs.remove("61");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b61MouseClicked

    private void b62MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b62MouseClicked
        if ((!b62clicked) && selectedNbrs.size() < kenoLevel) {
            b62.setBackground(Color.orange);
            b62clicked = true;
            selectedNbrs.add("62");
        } else if ((b62clicked)) {
            b62.setBackground(null);
            b62clicked = false;
            selectedNbrs.remove("62");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b62MouseClicked

    private void b63MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b63MouseClicked
        if ((!b63clicked) && selectedNbrs.size() < kenoLevel) {
            b63.setBackground(Color.orange);
            b63clicked = true;
            selectedNbrs.add("63");
        } else if ((b63clicked)) {
            b63.setBackground(null);
            b63clicked = false;
            selectedNbrs.remove("63");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b63MouseClicked

    private void b64MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b64MouseClicked
        if ((!b64clicked) && selectedNbrs.size() < kenoLevel) {
            b64.setBackground(Color.orange);
            b64clicked = true;
            selectedNbrs.add("64");
        } else if ((b64clicked)) {
            b64.setBackground(null);
            b64clicked = false;
            selectedNbrs.remove("64");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b64MouseClicked

    private void b65MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b65MouseClicked
        if ((!b65clicked) && selectedNbrs.size() < kenoLevel) {
            b65.setBackground(Color.orange);
            b65clicked = true;
            selectedNbrs.add("65");
        } else if ((b65clicked)) {
            b65.setBackground(null);
            b65clicked = false;
            selectedNbrs.remove("65");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b65MouseClicked

    private void b66MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b66MouseClicked
        if ((!b66clicked) && selectedNbrs.size() < kenoLevel) {
            b66.setBackground(Color.orange);
            b66clicked = true;
            selectedNbrs.add("66");
        } else if ((b66clicked)) {
            b66.setBackground(null);
            b66clicked = false;
            selectedNbrs.remove("66");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b66MouseClicked

    private void b67MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b67MouseClicked
        if ((!b67clicked) && selectedNbrs.size() < kenoLevel) {
            b67.setBackground(Color.orange);
            b67clicked = true;
            selectedNbrs.add("67");
        } else if ((b67clicked)) {
            b67.setBackground(null);
            b67clicked = false;
            selectedNbrs.remove("67");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b67MouseClicked

    private void b68MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b68MouseClicked
        if ((!b68clicked) && selectedNbrs.size() < kenoLevel) {
            b68.setBackground(Color.orange);
            b68clicked = true;
            selectedNbrs.add("68");
        } else if ((b68clicked)) {
            b68.setBackground(null);
            b68clicked = false;
            selectedNbrs.remove("68");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b68MouseClicked

    private void b69MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b69MouseClicked
        if ((!b69clicked) && selectedNbrs.size() < kenoLevel) {
            b69.setBackground(Color.orange);
            b69clicked = true;
            selectedNbrs.add("69");
        } else if ((b69clicked)) {
            b69.setBackground(null);
            b69clicked = false;
            selectedNbrs.remove("69");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b69MouseClicked

    private void b70MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b70MouseClicked
        if ((!b70clicked) && selectedNbrs.size() < kenoLevel) {
            b70.setBackground(Color.orange);
            b70clicked = true;
            selectedNbrs.add("70");
        } else if ((b70clicked)) {
            b70.setBackground(null);
            b70clicked = false;
            selectedNbrs.remove("70");
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_b70MouseClicked

    private void selectedNumbersAmountEqualsKenoLevel() {
        int addOrRemoveNumbers = kenoLevel - selectedNbrs.size();
        if (selectedNbrs.size() == kenoLevel) {
            statusBar.setForeground(new java.awt.Color(13, 76, 5));
            statusBar.setText("All numbers selected");
        }
        if (selectedNbrs.size() > kenoLevel) {
            statusBar.setForeground(new java.awt.Color(204, 51, 0));
            addOrRemoveNumbers = -addOrRemoveNumbers;
            statusBar.setText("Remove " + addOrRemoveNumbers + " number(s)");
        }
        if (selectedNbrs.size() < kenoLevel) {
            statusBar.setForeground(new java.awt.Color(204, 51, 0));
            statusBar.setText("Select " + addOrRemoveNumbers + " number(s)");
        }
    }

    private void resetButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonClicked
        b1clicked = false;
        b2clicked = false;
        b3clicked = false;
        b4clicked = false;
        b5clicked = false;
        b6clicked = false;
        b7clicked = false;
        b8clicked = false;
        b9clicked = false;
        b10clicked = false;
        b11clicked = false;
        b12clicked = false;
        b13clicked = false;
        b14clicked = false;
        b15clicked = false;
        b16clicked = false;
        b17clicked = false;
        b18clicked = false;
        b19clicked = false;
        b20clicked = false;
        b21clicked = false;
        b22clicked = false;
        b23clicked = false;
        b24clicked = false;
        b25clicked = false;
        b26clicked = false;
        b27clicked = false;
        b28clicked = false;
        b29clicked = false;
        b30clicked = false;
        b31clicked = false;
        b32clicked = false;
        b33clicked = false;
        b34clicked = false;
        b35clicked = false;
        b36clicked = false;
        b37clicked = false;
        b38clicked = false;
        b39clicked = false;
        b40clicked = false;
        b41clicked = false;
        b42clicked = false;
        b43clicked = false;
        b44clicked = false;
        b45clicked = false;
        b46clicked = false;
        b47clicked = false;
        b48clicked = false;
        b49clicked = false;
        b50clicked = false;
        b51clicked = false;
        b52clicked = false;
        b53clicked = false;
        b54clicked = false;
        b55clicked = false;
        b56clicked = false;
        b57clicked = false;
        b58clicked = false;
        b59clicked = false;
        b60clicked = false;
        b61clicked = false;
        b62clicked = false;
        b63clicked = false;
        b64clicked = false;
        b65clicked = false;
        b66clicked = false;
        b67clicked = false;
        b68clicked = false;
        b69clicked = false;
        b70clicked = false;
        b1.setBackground(null);
        b2.setBackground(null);
        b3.setBackground(null);
        b4.setBackground(null);
        b5.setBackground(null);
        b6.setBackground(null);
        b7.setBackground(null);
        b8.setBackground(null);
        b9.setBackground(null);
        b10.setBackground(null);
        b11.setBackground(null);
        b12.setBackground(null);
        b13.setBackground(null);
        b14.setBackground(null);
        b15.setBackground(null);
        b16.setBackground(null);
        b17.setBackground(null);
        b18.setBackground(null);
        b19.setBackground(null);
        b20.setBackground(null);
        b21.setBackground(null);
        b22.setBackground(null);
        b23.setBackground(null);
        b24.setBackground(null);
        b25.setBackground(null);
        b26.setBackground(null);
        b27.setBackground(null);
        b28.setBackground(null);
        b29.setBackground(null);
        b30.setBackground(null);
        b31.setBackground(null);
        b32.setBackground(null);
        b33.setBackground(null);
        b34.setBackground(null);
        b35.setBackground(null);
        b36.setBackground(null);
        b37.setBackground(null);
        b38.setBackground(null);
        b39.setBackground(null);
        b40.setBackground(null);
        b41.setBackground(null);
        b42.setBackground(null);
        b43.setBackground(null);
        b44.setBackground(null);
        b45.setBackground(null);
        b46.setBackground(null);
        b47.setBackground(null);
        b48.setBackground(null);
        b49.setBackground(null);
        b50.setBackground(null);
        b51.setBackground(null);
        b52.setBackground(null);
        b53.setBackground(null);
        b54.setBackground(null);
        b55.setBackground(null);
        b56.setBackground(null);
        b57.setBackground(null);
        b58.setBackground(null);
        b59.setBackground(null);
        b60.setBackground(null);
        b61.setBackground(null);
        b62.setBackground(null);
        b63.setBackground(null);
        b64.setBackground(null);
        b65.setBackground(null);
        b66.setBackground(null);
        b67.setBackground(null);
        b68.setBackground(null);
        b69.setBackground(null);
        b70.setBackground(null);
        selectedNbrs.clear();
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_resetButtonClicked

    private void readButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readButtonClicked
        int addOrRemoveNumbers = kenoLevel - selectedNbrs.size();
        if (selectedNbrs.size() < kenoLevel) {
            statusBar.setText("Select " + addOrRemoveNumbers + " number(s)");
        }
        if (selectedNbrs.size() > kenoLevel) {
            addOrRemoveNumbers = -addOrRemoveNumbers;
            statusBar.setText("Remove " + addOrRemoveNumbers + " number(s)");
        }

        if (selectedNbrs.size() == kenoLevel) {
            jTextPane2.setText("");
            statusBar.setText(" ");
            try {
                Keno.compareUserAndDrawNumbers(selectedNbrs);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(KenoForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_readButtonClicked

    private void slider1ValueChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider1ValueChanged
        kenoLevel = jSlider1.getValue();
        statusBar.setText(" ");
        selectedNumbersAmountEqualsKenoLevel();

    }//GEN-LAST:event_slider1ValueChanged

    private void randomButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_randomButtonClicked
        resetButtonClicked(evt);
        selectedNbrs.clear();
        ArrayList<Integer> kenoNbrsAll = new ArrayList<>();
        for (int i = 1; i <= 70; i++) {
            kenoNbrsAll.add(i);
        }
        Collections.shuffle(kenoNbrsAll);
        ArrayList<Integer> kenoNbrsSelected = new ArrayList<>();
        for (int i = 0; i < kenoLevel; i++) {
            kenoNbrsSelected.add(kenoNbrsAll.get(i));
            selectedNbrs.add(String.valueOf(kenoNbrsAll.get(i)));
        }
        for (int j = 0; j < selectedNbrs.size(); j++) {
            if (selectedNbrs.get(j).equals("1")) {
                b1.setBackground(Color.orange);
                b1clicked = true;
            }
            if (selectedNbrs.get(j).equals("2")) {
                b2.setBackground(Color.orange);
                b2clicked = true;
            }
            if (selectedNbrs.get(j).equals("3")) {
                b3.setBackground(Color.orange);
                b3clicked = true;
            }
            if (selectedNbrs.get(j).equals("4")) {
                b4.setBackground(Color.orange);
                b4clicked = true;
            }
            if (selectedNbrs.get(j).equals("5")) {
                b5.setBackground(Color.orange);
                b5clicked = true;
            }
            if (selectedNbrs.get(j).equals("6")) {
                b6.setBackground(Color.orange);
                b6clicked = true;
            }
            if (selectedNbrs.get(j).equals("7")) {
                b7.setBackground(Color.orange);
                b7clicked = true;
            }
            if (selectedNbrs.get(j).equals("8")) {
                b8.setBackground(Color.orange);
                b8clicked = true;
            }
            if (selectedNbrs.get(j).equals("9")) {
                b9.setBackground(Color.orange);
                b9clicked = true;
            }
            if (selectedNbrs.get(j).equals("10")) {
                b10.setBackground(Color.orange);
                b10clicked = true;
            }
            if (selectedNbrs.get(j).equals("11")) {
                b11.setBackground(Color.orange);
                b11clicked = true;
            }
            if (selectedNbrs.get(j).equals("12")) {
                b12.setBackground(Color.orange);
                b12clicked = true;
            }
            if (selectedNbrs.get(j).equals("13")) {
                b13.setBackground(Color.orange);
                b13clicked = true;
            }
            if (selectedNbrs.get(j).equals("14")) {
                b14.setBackground(Color.orange);
                b14clicked = true;
            }
            if (selectedNbrs.get(j).equals("15")) {
                b15.setBackground(Color.orange);
                b15clicked = true;
            }
            if (selectedNbrs.get(j).equals("16")) {
                b16.setBackground(Color.orange);
                b16clicked = true;
            }
            if (selectedNbrs.get(j).equals("17")) {
                b17.setBackground(Color.orange);
                b17clicked = true;
            }
            if (selectedNbrs.get(j).equals("18")) {
                b18.setBackground(Color.orange);
                b18clicked = true;
            }
            if (selectedNbrs.get(j).equals("19")) {
                b19.setBackground(Color.orange);
                b19clicked = true;
            }
            if (selectedNbrs.get(j).equals("20")) {
                b20.setBackground(Color.orange);
                b20clicked = true;
            }
            if (selectedNbrs.get(j).equals("21")) {
                b21.setBackground(Color.orange);
                b21clicked = true;
            }
            if (selectedNbrs.get(j).equals("22")) {
                b22.setBackground(Color.orange);
                b22clicked = true;
            }
            if (selectedNbrs.get(j).equals("23")) {
                b23.setBackground(Color.orange);
                b23clicked = true;
            }
            if (selectedNbrs.get(j).equals("24")) {
                b24.setBackground(Color.orange);
                b24clicked = true;
            }
            if (selectedNbrs.get(j).equals("25")) {
                b25.setBackground(Color.orange);
                b25clicked = true;
            }
            if (selectedNbrs.get(j).equals("26")) {
                b26.setBackground(Color.orange);
                b26clicked = true;
            }
            if (selectedNbrs.get(j).equals("27")) {
                b27.setBackground(Color.orange);
                b27clicked = true;
            }
            if (selectedNbrs.get(j).equals("28")) {
                b28.setBackground(Color.orange);
                b28clicked = true;
            }
            if (selectedNbrs.get(j).equals("29")) {
                b29.setBackground(Color.orange);
                b29clicked = true;
            }
            if (selectedNbrs.get(j).equals("30")) {
                b30.setBackground(Color.orange);
                b30clicked = true;
            }
            if (selectedNbrs.get(j).equals("31")) {
                b31.setBackground(Color.orange);
                b31clicked = true;
            }
            if (selectedNbrs.get(j).equals("32")) {
                b32.setBackground(Color.orange);
                b32clicked = true;
            }
            if (selectedNbrs.get(j).equals("33")) {
                b33.setBackground(Color.orange);
                b33clicked = true;
            }
            if (selectedNbrs.get(j).equals("34")) {
                b34.setBackground(Color.orange);
                b34clicked = true;
            }
            if (selectedNbrs.get(j).equals("35")) {
                b35.setBackground(Color.orange);
                b35clicked = true;
            }
            if (selectedNbrs.get(j).equals("36")) {
                b36.setBackground(Color.orange);
                b36clicked = true;
            }
            if (selectedNbrs.get(j).equals("37")) {
                b37.setBackground(Color.orange);
                b37clicked = true;
            }
            if (selectedNbrs.get(j).equals("38")) {
                b38.setBackground(Color.orange);
                b38clicked = true;
            }
            if (selectedNbrs.get(j).equals("39")) {
                b39.setBackground(Color.orange);
                b39clicked = true;
            }
            if (selectedNbrs.get(j).equals("40")) {
                b40.setBackground(Color.orange);
                b40clicked = true;
            }
            if (selectedNbrs.get(j).equals("41")) {
                b41.setBackground(Color.orange);
                b41clicked = true;
            }
            if (selectedNbrs.get(j).equals("42")) {
                b42.setBackground(Color.orange);
                b42clicked = true;
            }
            if (selectedNbrs.get(j).equals("43")) {
                b43.setBackground(Color.orange);
                b43clicked = true;
            }
            if (selectedNbrs.get(j).equals("44")) {
                b44.setBackground(Color.orange);
                b44clicked = true;
            }
            if (selectedNbrs.get(j).equals("45")) {
                b45.setBackground(Color.orange);
                b45clicked = true;
            }
            if (selectedNbrs.get(j).equals("46")) {
                b46.setBackground(Color.orange);
                b46clicked = true;
            }
            if (selectedNbrs.get(j).equals("47")) {
                b47.setBackground(Color.orange);
                b47clicked = true;
            }
            if (selectedNbrs.get(j).equals("48")) {
                b48.setBackground(Color.orange);
                b48clicked = true;
            }
            if (selectedNbrs.get(j).equals("49")) {
                b49.setBackground(Color.orange);
                b49clicked = true;
            }
            if (selectedNbrs.get(j).equals("50")) {
                b50.setBackground(Color.orange);
                b50clicked = true;
            }
            if (selectedNbrs.get(j).equals("51")) {
                b51.setBackground(Color.orange);
                b51clicked = true;
            }
            if (selectedNbrs.get(j).equals("52")) {
                b52.setBackground(Color.orange);
                b52clicked = true;
            }
            if (selectedNbrs.get(j).equals("53")) {
                b53.setBackground(Color.orange);
                b53clicked = true;
            }
            if (selectedNbrs.get(j).equals("54")) {
                b54.setBackground(Color.orange);
                b54clicked = true;
            }
            if (selectedNbrs.get(j).equals("55")) {
                b55.setBackground(Color.orange);
                b55clicked = true;
            }
            if (selectedNbrs.get(j).equals("56")) {
                b56.setBackground(Color.orange);
                b56clicked = true;
            }
            if (selectedNbrs.get(j).equals("57")) {
                b57.setBackground(Color.orange);
                b57clicked = true;
            }
            if (selectedNbrs.get(j).equals("58")) {
                b58.setBackground(Color.orange);
                b58clicked = true;
            }
            if (selectedNbrs.get(j).equals("59")) {
                b59.setBackground(Color.orange);
                b59clicked = true;
            }
            if (selectedNbrs.get(j).equals("60")) {
                b60.setBackground(Color.orange);
                b60clicked = true;
            }
            if (selectedNbrs.get(j).equals("61")) {
                b61.setBackground(Color.orange);
                b61clicked = true;
            }
            if (selectedNbrs.get(j).equals("62")) {
                b62.setBackground(Color.orange);
                b62clicked = true;
            }
            if (selectedNbrs.get(j).equals("63")) {
                b63.setBackground(Color.orange);
                b63clicked = true;
            }
            if (selectedNbrs.get(j).equals("64")) {
                b64.setBackground(Color.orange);
                b64clicked = true;
            }
            if (selectedNbrs.get(j).equals("65")) {
                b65.setBackground(Color.orange);
                b65clicked = true;
            }
            if (selectedNbrs.get(j).equals("66")) {
                b66.setBackground(Color.orange);
                b66clicked = true;
            }
            if (selectedNbrs.get(j).equals("67")) {
                b67.setBackground(Color.orange);
                b67clicked = true;
            }
            if (selectedNbrs.get(j).equals("68")) {
                b68.setBackground(Color.orange);
                b68clicked = true;
            }
            if (selectedNbrs.get(j).equals("69")) {
                b69.setBackground(Color.orange);
                b69clicked = true;
            }
            if (selectedNbrs.get(j).equals("70")) {
                b70.setBackground(Color.orange);
                b70clicked = true;
            }
        }
        selectedNumbersAmountEqualsKenoLevel();
    }//GEN-LAST:event_randomButtonClicked

    private void allNumbersOneToSeventy(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allNumbersOneToSeventy
        try {
            Keno.countNumbersOneToSeventyAmount();
        } catch (UnsupportedEncodingException | BadLocationException ex) {
            Logger.getLogger(KenoForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        Keno.printNumbersToTable("numbersOneToSeventy");
    }//GEN-LAST:event_allNumbersOneToSeventy

    private void jCheckBox2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox2StateChanged
        if (!jCheckBox2State) {
            jCheckBox2State = true;
        } else if (jCheckBox2State) {
            jCheckBox2State = false;
        }
    }//GEN-LAST:event_jCheckBox2StateChanged

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        if (!jCheckBox1State) {
            jCheckBox1State = true;
        } else if (jCheckBox1State) {
            jCheckBox1State = false;
        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    private void hotAndColdNumbers(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hotAndColdNumbers
        Keno.printNumbersToTable("hotAndColdNumbers");
    }//GEN-LAST:event_hotAndColdNumbers

    private void updateDraws(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateDraws
        HttpConnection.sendHttpRequest();
        DrawComparator.readResultFile();
    }//GEN-LAST:event_updateDraws

    private void jButton4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MousePressed
        KenoForm.statusBar.setForeground(new java.awt.Color(13, 76, 5));
        KenoForm.statusBar.setText("Updating data...");
    }//GEN-LAST:event_jButton4MousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b10;
    private javax.swing.JButton b11;
    private javax.swing.JButton b12;
    private javax.swing.JButton b13;
    private javax.swing.JButton b14;
    private javax.swing.JButton b15;
    private javax.swing.JButton b16;
    private javax.swing.JButton b17;
    private javax.swing.JButton b18;
    private javax.swing.JButton b19;
    private javax.swing.JButton b2;
    private javax.swing.JButton b20;
    private javax.swing.JButton b21;
    private javax.swing.JButton b22;
    private javax.swing.JButton b23;
    private javax.swing.JButton b24;
    private javax.swing.JButton b25;
    private javax.swing.JButton b26;
    private javax.swing.JButton b27;
    private javax.swing.JButton b28;
    private javax.swing.JButton b29;
    private javax.swing.JButton b3;
    private javax.swing.JButton b30;
    private javax.swing.JButton b31;
    private javax.swing.JButton b32;
    private javax.swing.JButton b33;
    private javax.swing.JButton b34;
    private javax.swing.JButton b35;
    private javax.swing.JButton b36;
    private javax.swing.JButton b37;
    private javax.swing.JButton b38;
    private javax.swing.JButton b39;
    private javax.swing.JButton b4;
    private javax.swing.JButton b40;
    private javax.swing.JButton b41;
    private javax.swing.JButton b42;
    private javax.swing.JButton b43;
    private javax.swing.JButton b44;
    private javax.swing.JButton b45;
    private javax.swing.JButton b46;
    private javax.swing.JButton b47;
    private javax.swing.JButton b48;
    private javax.swing.JButton b49;
    private javax.swing.JButton b5;
    private javax.swing.JButton b50;
    private javax.swing.JButton b51;
    private javax.swing.JButton b52;
    private javax.swing.JButton b53;
    private javax.swing.JButton b54;
    private javax.swing.JButton b55;
    private javax.swing.JButton b56;
    private javax.swing.JButton b57;
    private javax.swing.JButton b58;
    private javax.swing.JButton b59;
    private javax.swing.JButton b6;
    private javax.swing.JButton b60;
    private javax.swing.JButton b61;
    private javax.swing.JButton b62;
    private javax.swing.JButton b63;
    private javax.swing.JButton b64;
    private javax.swing.JButton b65;
    private javax.swing.JButton b66;
    private javax.swing.JButton b67;
    private javax.swing.JButton b68;
    private javax.swing.JButton b69;
    private javax.swing.JButton b7;
    private javax.swing.JButton b70;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JButton check;
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSlider1;
    public static final javax.swing.JTable jTableHotColdNumbers = new javax.swing.JTable();
    public static javax.swing.JTable jTableOneToSeventyNumbers;
    public static final javax.swing.JTextPane jTextPane2 = new javax.swing.JTextPane();
    public static javax.swing.JLabel statusBar;
    // End of variables declaration//GEN-END:variables

    public static boolean jCheckBox1State = true;
    public static boolean jCheckBox2State = false;
    boolean b1clicked, b2clicked = false, b3clicked = false, b4clicked = false, b5clicked = false, b6clicked = false, b7clicked = false, b8clicked = false, b9clicked = false, b10clicked = false;
    boolean b11clicked = false, b12clicked = false, b13clicked = false, b14clicked = false, b15clicked = false, b16clicked = false, b17clicked = false, b18clicked = false, b19clicked = false, b20clicked = false;
    boolean b21clicked = false, b22clicked = false, b23clicked = false, b24clicked = false, b25clicked = false, b26clicked = false, b27clicked = false, b28clicked = false, b29clicked = false, b30clicked = false;
    boolean b31clicked = false, b32clicked = false, b33clicked = false, b34clicked = false, b35clicked = false, b36clicked = false, b37clicked = false, b38clicked = false, b39clicked = false, b40clicked = false;
    boolean b41clicked = false, b42clicked = false, b43clicked = false, b44clicked = false, b45clicked = false, b46clicked = false, b47clicked = false, b48clicked = false, b49clicked = false, b50clicked = false;
    boolean b51clicked = false, b52clicked = false, b53clicked = false, b54clicked = false, b55clicked = false, b56clicked = false, b57clicked = false, b58clicked = false, b59clicked = false, b60clicked = false;
    boolean b61clicked = false, b62clicked = false, b63clicked = false, b64clicked = false, b65clicked = false, b66clicked = false, b67clicked = false, b68clicked = false, b69clicked = false, b70clicked = false;
    int kenoLevel = 2; //jSlider1 init value has set to 2

    ArrayList<String> selectedNbrs = new ArrayList<>();
}
